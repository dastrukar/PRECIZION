class Gun : Weapon //used for most guns
{
	action void A_ThrowGun(string throw, string amm)
	{
		A_PlaySound("skeleton/swing", CHAN_WEAPON);
		A_FireProjectile(throw, 0, false, 0, 8, FPF_NOAUTOAIM);
		A_TakeInventory(amm);
		A_TakeInventory("ammcount", 100);
	}	
		
	action void A_NoGun(string weap)	
	{
		A_TakeInventory(weap);
		A_TakeInventory("agun");
	}
	
	action void A_AllowThrow(bool allowshoot = false) //allows the use of alt-fire
	{
		if (allowshoot==true)
		{
			A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH);
		} else {
			A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH|WRF_NOPRIMARY);
		}
	}

Default
  {
  Weapon.AmmoUse 0;
  Weapon.BobStyle "Alpha";
  Weapon.BobSpeed 1.5;
  +WEAPON.NOAUTOAIM
  +WEAPON.AMMO_OPTIONAL
  +INVENTORY.UNTOSSABLE
  }
}

class GItem : CustomInventory //used for gun pickups
{
	int ctimer;
	action void A_GiveGun(string give, string item)
	{
		A_GiveInventory("agun", 1);
		A_GiveInventory(give, 1); //gives the item that you actually need
		A_TakeInventory(item, 1); //removes the item that was used for the pickup
	}

Default
  {
  Inventory.Amount 1;
  Inventory.MaxAmount 1;
  Inventory.PickupSound "misc/w_pkup";
  +DONTGIB;
  }
  
  override bool TryPickup(in out Actor toucher)
	{
		if (toucher.CountInv("agun"))
		{
			ctimer++;
			if (ctimer==40)
			{
				A_Log("You already have a gun!");
				ctimer = 0;
			}
			return false;
		}
		else
			return Super.TryPickup(toucher);
	}
  
}

class AItem : CustomInventory
{
	action void A_GiveAmo(string give, string item, int ammoamt)
	{
		A_GiveInventory("amo", 1);
		A_GiveInventory(give, 1);
		A_GiveInventory("ammcount", ammoamt);
		A_TakeInventory(item, 1);
	}

Default
  {
  Inventory.Amount 1;
  Inventory.MaxAmount 1;
  Inventory.PickupSound "misc/i_pkup";
  +DONTGIB;
  }
  
	int atimer;
	override bool TryPickup(in out Actor toucher)
	{
		if (toucher.CountInv("amo"))
		{
			atimer++;
			if (atimer==40)
			{
				A_Log("You already have a handful of ammo!");
				atimer = 0;
			}
			return false;
		}
		else
			return Super.TryPickup(toucher);
	}
}

enum enemyscores
{
	s_zman = 20,
	s_sman = 60,
	s_zmarine = 40,
	s_ssgman = 80,
	s_pinky = 100,
	s_imp = 40
	
}