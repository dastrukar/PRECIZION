class pp : Gun //changed to default weapon due to balancing issues
{

action void A_PP(int npitch, int intensity=2, int shaketime=2, string wsound="weapons/pfire", double vol=0.5)
{
	A_Quake(2, 2, 0, 32, "");
	A_PlaySound(wsound, CHAN_WEAPON, vol);
	A_SetPitch(pitch - npitch);
	A_GunFlash();	
}

action void A_AltFire(int type=1)
{
	A_GiveInventory("altc", 1);
	
	if (type == 1)
	{
		A_FireBullets(6, 2, -1, 8, "bulletsmok", 1, 0, "bullettracer", 4);
	} else
	if (type == 2) {
		A_FireBullets(6, 2, -1, 8, "bulletsmok", 1, 0, "bullettracer", 4);
		A_FireBullets(6, 2, -1, 8, "bulletsmok", 1, 0, "bullettracer", 4);
	}
}

Default
  {
  Weapon.AmmoType1 "PClip";
  Weapon.AmmoType2 "paltcooldown";
  Weapon.AmmoUse 0;
  Weapon.AmmoGive 0;
  Weapon.UpSound "weapons/pequip";
  Inventory.Icon "PISTA0";
  Decal "bhole";
  Inventory.PickupMessage "Picked up the Handgun.";
  Obituary "%o got shot by %k's pea shooter.";
  +WEAPON.NOAUTOFIRE;
  }
  
  
	States
	{
		Ready:
			PISG A 1 A_WeaponReady();
			loop;
		
		Select:
			PISG A 0 Offset(-20, 50);
		Select1:
			PISG A 1 A_Raise(10);
			loop;
		
		DeSelect:
			PISG A 1 A_Lower(10);
			loop;
			
		//Primary Fire states
		Fire:
			//Check level
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("lvl", 3, "FireS2");
			TNT1 A 0 A_JumpIfInventory("lvl", 2, "FireS1");
		FireNormal:
			PISG B 0 A_FireBullets(2, 2, 1, 8, "bulletsmok", 1, 0, "bullettracer", 4);
			"####" "#" 0 A_PP(1);
		FireEnd:
			"####" "#" 1 Offset(0, 50);
			"####" "#" 1 Offset(0, 40);
			"####" CD 2 A_AllowThrow(true);
			"####" B 1 A_AllowThrow(true);
			goto Ready;
			
		FireS1:
			PISG B 0 A_FireBullets(2, 2, 2, 8, "bulletsmok", 1, 0, "bullettracer", 4);
			"####" "#" 0 A_PP(1);
			goto FireEnd;
		FireS2:
			PISG B 0 A_FireBullets(2, 2, 1, 20, "bulletsmok", 1, 0, "bullettracerl", 4);
			"####" "#" 0 A_PP(1, 3, 3);
			goto FireEnd;
		//End of primary Fire states
			
		//AltFire states	
		AltFire:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("paltcooldown", 1, "AltDryFire");
			TNT1 A 0 A_JumpIfInventory("lvl", 3, "AF2");
		AF1:
			PISG B 0 A_AltFire();
			"####" "#" 0 A_PP(1);
			"####" "#" 1 Offset(0, 50);
			"####" "#" 1 Offset(0, 40);
			"####" "#" 0 A_JumpIfInventory("altc", 6, "AltCheck1");
			loop;
		AltCheck1:
			"####" "#" 0 A_JumpIfInventory("lvl", 2, "AltMore1");
			goto AltEnd;
			
		AF2:
			PISG B 0 A_AltFire(2);
			"####" "#" 0 A_PP(1);
			"####" "#" 1 Offset(0, 50);
			"####" "#" 1 Offset(0, 40);
			"####" "#" 0 A_JumpIfInventory("altc", 6, "AltCheck2");
			loop;
		AltCheck2:
			"####" "#" 0 A_JumpIfInventory("lvl", 4, "AltMore2");
			goto AltEnd;
			
		AltMore1:
			PISG B 0 A_AltFire();
			"####" "#" 0 A_PP(1);
			"####" "#" 1 Offset(0, 50);
			"####" "#" 1 Offset(0, 40);
			"####" "#" 0 A_JumpIfInventory("altc", 12, "AltEnd");
			loop;
		AltMore2:
			PISG B 0 A_AltFire(2);
			"####" "#" 0 A_PP(1);
			"####" "#" 1 Offset(0, 50);
			"####" "#" 1 Offset(0, 40);
			"####" "#" 0 A_JumpIfInventory("altc", 12, "AltEnd");
			loop;
			
		AltDryFire:
			TNT1 A 0 A_PlaySound("weapons/na", CHAN_WEAPON);
			goto Ready;
			
		AltEnd:
			"####" CD 2;
			"####" E 1 { A_GiveInventory("paltcooldown", 999); A_TakeInventory("altc", 100); }
			"####" "#" 2 Offset(0, 40);
			"####" "#" 2;
			"####" B 1 A_AllowThrow(true);
			goto Ready;
		//End of AltFire states
			
		Flash:
			PISF A 2 Bright A_Light(5);
			Goto LightDone;
			
		Spawn:
			TNT1 A 0 A_SpawnItemEx("Handgun");
			stop;
	}
}

class paltcooldown : Ammo
{
Default
  {
  Inventory.MaxAmount 270;
  }
}

class altc : Inventory
{
Default
  {
  Inventory.MaxAmount 100;
  }
}