class STBar : BaseStatusBar {
HudFont numwrite;
HudFont textwrite;
HudFont scorewrite;

DynamicValueInterpolator hpinterpolate; //for number
DynamicValueInterpolator ohpinterpolate; //for overflowhp

DynamicValueInterpolator arminterpolate;
DynamicValueInterpolator oarminterpolate;

int overflowhealth;
int overflowarmor;

int scorenum;

	override void Init() 
	{
		Super.Init();
		SetSize(0, 320, 200); //must be set or game will crash
		
		Font fnt = "SIMPLEFONT";
		textwrite = HudFont.Create(fnt, fnt.getCharWidth("0") + 1, true, 0, 0);
		
		fnt = "SMALLFONT";
		scorewrite = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft, 1, 1);
		
		fnt = "BFONT";
		numwrite = HUDFont.Create(fnt, fnt.getCharWidth("0"), Mono_CellRight, 0, 0);
		
		hpinterpolate = DynamicValueInterpolator.Create(0, 0.25, 1, 8);
		ohpinterpolate = DynamicValueInterpolator.Create(0, 0.25, 1, 8);
		
		arminterpolate = DynamicValueInterpolator.Create(0, 0.25, 1, 8);
		oarminterpolate = DynamicValueInterpolator.Create(0, 0.25, 1, 8);
	}
	
	override void Draw(int state, double TicFrac) 
	{
		Super.Draw(state, TicFrac);

			BeginHUD();
			DrawFullScreenStuff();
	}
	
	override void Tick() 
	{
		Super.Tick();
		
		overflowhealth = CPlayer.Health - 100;
		
		hpinterpolate.Update(CPlayer.Health);
		ohpinterpolate.Update(overflowhealth);
		
		let armor = CPlayer.mo.FindInventory("BasicArmor");
		overflowarmor = Armor.Amount - 100;
		
		arminterpolate.Update(Armor.Amount);
		oarminterpolate.Update(overflowarmor);
	}
	
	override void NewGame() 
	{
		Super.NewGame();
		
		hpinterpolate.Reset(0);
		ohpinterpolate.Reset(0);
		
		arminterpolate.Reset(0);
		oarminterpolate.Reset(0);
	}
	
	void DrawFullScreenStuff()	
	{
		//for my convience
		let armor = CPlayer.mo.FindInventory("BasicArmor");
		vector2 hudhp = (50, -3);
		vector2 hudarm = (50, -30);
		vector2 hudgrid = (25, -6);
		vector2 hudmugshot = (26, -16);
		vector2 hudamm = (-50, -3);
		vector2 hudlvl = (-50, -30);
		
		vector2 hpbarpos = (60, -6);
		vector2 hpnumpos = (79, -24);
		vector2 ohpbarpos = (121, -8);
		
		vector2 armbarpos = (60, -33);
		vector2 armnumpos = (79, -51);
		vector2 oarmbarpos = (104, -24);
		
		vector2 ammnumpos = (-43, -20);
		vector2 lvlbarpos = (-50, -34);
		
		
		int inthp = hpinterpolate.getValue();
		int intohp = ohpinterpolate.getValue();
		
		int intarm = arminterpolate.getValue();
		int intoarm = oarminterpolate.getValue();
		
		vector2 iconbox = (40, 20);
		//health and armor number
		DrawImage("GRAPHICS/nhud/hpm.png", hudhp);
		DrawImage("GRAPHICS/nhud/armm.png", hudarm);
		DrawString(numwrite, FormatNumber(inthp, 3), hpnumpos, DI_TEXT_ALIGN_RIGHT|DI_NOSHADOW);
		DrawString(numwrite, FormatNumber(intarm, 3), armnumpos, DI_TEXT_ALIGN_RIGHT);
		
		//DrawBar("GRAPHICS/BARS/hudhpbarb.png", "GRAPHICS/BARS/hudhpbarc.png", inthealth, 100, hpbarpos, 0, 0);
		//DrawBar("GRAPHICS/BARS/hudhpbara.png", "GRAPHICS/BARS/hudhpbarc.png", inthp, 100, hpbarpos, 0, 0);
		
		//draw hp bar
		if (inthp > 50)
		{
			DrawBar("GRAPHICS/NHUD/hpb1.png", "GRAPHICS/NHUD/baseb.png", inthp, 100, hpbarpos, 0, 0);
		} else 
		if (inthp > 25)
		{
			DrawBar("GRAPHICS/NHUD/hpbm.png", "GRAPHICS/NHUD/baseb.png", inthp, 100, hpbarpos, 0, 0);
		} else {
			DrawBar("GRAPHICS/NHUD/hpbl.png", "GRAPHICS/NHUD/baseb.png", inthp, 100, hpbarpos, 0, 0);
		}
		
		//draw armor bar
		DrawBar("GRAPHICS/NHUD/armb1.png", "GRAPHICS/NHUD/baseb.png", intarm, 200, armbarpos, 0, 0);
		
		//-----------------------------------------------------------------------
		//DrawWeaponStuff
		
		DrawImage("GRAPHICS/NHUD/wpnm.png", hudamm);
		bool woverwrite = false;
		let wpnname = CPlayer.readyWeapon;
		Inventory ammotype1, ammotype2;
		[ammotype1, ammotype2] = GetCurrentAmmo();
		
		if (ammotype2 != null)
		{
			woverwrite = true;
			DrawString(numwrite, FormatNumber(ammotype2.Amount, 0), ammnumpos, DI_TEXT_ALIGN_RIGHT);
		} else {
			woverwrite = false;
		}
		
		if (ammotype1 == null)
		{
			DrawString(numwrite, "-", ammnumpos, DI_TEXT_ALIGN_RIGHT);
		} else 
		if (woverwrite == false)
		{
			DrawString(numwrite, FormatNumber(ammotype1.Amount, 0), ammnumpos, DI_TEXT_ALIGN_RIGHT);
		}
		
		//-----------------------------------------------------------------------
		//DrawLevelStuff
		let level = GetAmount("lvl");
		int scrap = GetAmount("Scrap") - 100 * (level - 1);
		
		DrawImage("GRAPHICS/NHUD/lvlm.png", hudlvl);
		DrawBar("GRAPHICS/NHUD/lvlbar.png", "GRAPHICS/NHUD/lvlbare.png", scrap, 100, lvlbarpos, 0, SHADER_REVERSE);
		
		if (level == 1) { DrawImage("GRAPHICS/NHUD/lvl1.png", hudlvl); }
		if (level == 2) { DrawImage("GRAPHICS/NHUD/lvl2.png", hudlvl); }
		if (level == 3) { DrawImage("GRAPHICS/NHUD/lvl3.png", hudlvl); }
		if (level == 4) { DrawImage("GRAPHICS/NHUD/lvl4.png", hudlvl); }
		if (level == 5) { DrawImage("GRAPHICS/NHUD/lvl5.png", hudlvl); }
	}
}
